{
  "name": "ai-task",
  "displayName": " AI Task: Proactive Coding Assistant, automatically search errors, perform multi-file edits and more!",
  "publisher": "bra1nDump",
  "description": "Use comments with @task to perform multi-file changes, automatically get your errors in console searched on the web and more!",
  "version": "0.0.37",
  "license": "Business Source License 1.1",
  "icon": "icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/bra1nDump/bread"
  },
  "engines": {
    "vscode": "^1.79.0"
  },
  "categories": [
    "Programming Languages",
    "Machine Learning",
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "extensionDependencies": [
    "marxism.ai-error-search-assistant"
  ],
  "keywords": [
    "ai",
    "coding assistant",
    "multi-file edits",
    "inline instructions",
    "llm",
    "gpt"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "notebooks": [
      {
        "type": "task-notebook",
        "displayName": "Task Notebook",
        "selector": [
          {
            "filenamePattern": "*.task"
          }
        ]
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "taskSidebar",
          "title": "AI Task",
          "icon": "./icon.svg"
        }
      ]
    },
    "views": {
      "taskSidebar": [
        {
          "type": "webview",
          "id": "taskView",
          "name": "AI Task"
        }
      ]
    },
    "languages": [
      {
        "id": "task-notebook",
        "aliases": [
          "Task Book"
        ],
        "filenamePatterns": [
          "*.task"
        ]
      }
    ],
    "commands": [
      {
        "command": "ai-task.completeInlineTasks",
        "title": "AI Task: Address @task comments in opened tabs"
      },
      {
        "command": "ai-task.newTaskNotebook",
        "title": "AI Task: Create a new task notebook"
      },
      {
        "command": "ai-task.setOpenAiKey",
        "title": "AI Task: Set OpenAI Key"
      },
      {
        "command": "ai-task.startTutorial",
        "title": "AI Task: Start Tutorial"
      },
      {
        "command": "ai-task.sendMessageToChrome",
        "title" : "AI Task: send message to Chrome extension"
      },
      {
        "command": "ai-task.addTextToMessage",
        "title" : "AI Task: add text to message"
      }
    ],
    "configuration": {
      "properties": {
        "ai-task.taskMentionIdentifier": {
          "type": "string",
          "default": "task",
          "description": "Override the keyword the LLM uses when searching for its task"
        },
        "ai-task.ignorePatterns": {
          "type": "array",
          "default": [],
          "description": "Directories and files to exclude when adding files to context for example from active tabs or files with @task mentions"
        },
        "ai-task.userId": {
          "type": "string",
          "description": "User ID to use for by default anonymous analytics"
        }
      }
    },
    "keybindings": [
      {
        "command": "ai-task.newTaskNotebook",
        "key": "ctrl+u",
        "mac": "cmd+u"
      },
      {
        "command": "ai-task.sendMessageToChrome",
        "key": "ctrl+k",
        "mac": "cmd+k"
      },
      {
        "command": "ai-task.addTextToMessage",
        "key": "ctrl+alt+k",
        "mac": "cmd+option+k"
      },
      {
        "key": "shift+enter",
        "command": "editor.action.insertLineAfter",
        "when": "'Dummy currently does nothing because it it appears above the no book override keybinding, search backlog for more info for keys'"
      }
    ],
    "walkthroughs": [
      {
        "id": "createNotebookWalkthrough",
        "title": "Use AI Task",
        "when": "true",
        "description": "Learn how to create a notebook using our shortcut.",
        "steps": [
          {
            "id": "shortcutStep",
            "title": "Create new AI Task Chat by using shortcut",
            "description": "To create a new notebook quickly:\n- Focus on the editor.\n- Press `Cmd+U` on Mac or `Ctrl+U` on Windows.\nA new notebook will be created!",
            "media": {
              "image": "./documents/assets/walkthrough1.jpg",
              "altText": "Demonstration of using the shortcut"
            }
          },
          {
            "id": "iconStep",
            "title": "Create new AI Task Chat by using side bar",
            "description": "To create a new notebook you can use icon on side bar",
            "media": {
              "image": "./documents/assets/walkthrough2.jpg",
              "altText": "Demonstration of using the side bar"
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "------------section-build------------": "",
    "webpack:base": "webpack --config configurations/webpack.config.js",
    "webpack:watch": "npm run webpack:base -- --mode development --watch",
    "webpack:watch:prod": "npm run webpack:base -- --mode production --watch",
    "bundle:prod": "npm run webpack:base -- --mode production --devtool false",
    "/// --build is needed for composite projects to work ///": "https://www.typescriptlang.org/docs/handbook/project-references.html#build-mode-for-typescript",
    "watch-tsc": "tsc --build --watch",
    "build": "npx rimraf out/ && tsc --build && npm run bundle:prod",
    "------------section-test------------": "",
    "test": "npm run build && node out/test/runTest.js",
    "------------section-extension-packaging-and-publishing------------": "Refactor: move package + publishing to the install-local script and have it accept --publish --package-and-install-local",
    "package": "npm run build && npx vsce package --ignoreFile configurations/.vscodeignore --no-dependencies --ignoreFile  configurations/.vscodeignore --allow-star-activation --githubBranch main",
    "publish": "npm run test && npm run bundle:prod && npx vsce publish --no-dependencies --ignoreFile  configurations/.vscodeignore --allow-star-activation --githubBranch main",
    "publish:bypass-test": "npm run bundle:prod && npx vsce publish --no-dependencies --ignoreFile  configurations/.vscodeignore --allow-star-activation --githubBranch main",
    "install-local": "node scripts/install-local.mjs code",
    "------------section-other------------": "",
    "lint": "eslint . --config configurations/.eslintrc.js --ext ts --fix",
    "codegen:prompt-checkpoints": "MULTI_FILE_PROMPT_VERSION=v5-new-example-refactor-functions-with-similar-functionality node ./out/script-generate-prompt-checkpoint.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.2.5",
    "@types/source-map-support": "^0.5.7",
    "@types/vscode": "^1.79.0",
    "@types/ws": "^8.5.8",
    "@typescript-eslint/eslint-plugin": "^6.4.0",
    "@typescript-eslint/parser": "^6.4.0",
    "@vscode/test-electron": "^2.3.5",
    "@vscode/vsce": "^2.20.1",
    "dotenv": "^16.3.1",
    "eslint": "^8.41.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-comment-length": "^1.6.1",
    "eslint-plugin-prettier": "^5.0.0",
    "eslint-plugin-unused-imports": "^3.0.0",
    "glob": "^8.1.0",
    "jsonfile": "^6.1.0",
    "mocha": "^10.2.0",
    "source-map-support": "^0.5.21",
    "ts-loader": "^9.4.3",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.3",
    "webpack": "^5.85.0",
    "webpack-cli": "^5.1.1"
  },
  "dependencies": {
    "dedent": "^1.5.1",
    "ix": "^5.0.0",
    "openai": "^4.0.0",
    "ws": "^8.14.2",
    "zod": "^3.22.4"
  }
}
